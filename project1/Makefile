########################
# Author: Kendrick Cline
# Date:   9/27/2015
########################

TARGETS  = get put
CC       = gcc
# compiling flags here
CFLAGS   = -std=gnu99 -Wall -I.

LINKER   = gcc -o
# linking flags here
LFLAGS   = -Wall -I. -lm

# proper directories where each files should be
SRCDIR   = src/main
OBJDIR   = obj

MKDIR_P 	= mkdir -p
OUT_DIRS	= obj/get obj/put
OUT_DIR_ROOTS = obj

GETSOURCES  := $(wildcard $(SRCDIR)/get/*.c)
PUTSOURCES  := $(wildcard $(SRCDIR)/put/*.c)
GETOBJECTS 	:= $(GETSOURCES:$(SRCDIR)/get/%.c=$(OBJDIR)/get/%.o)
PUTOBJECTS 	:= $(PUTSOURCES:$(SRCDIR)/put/%.c=$(OBJDIR)/put/%.o)
rm       = rm -rf
PARSEDIR := src/main/parse/

# Check for valid directories, then create the target executables
.PHONY: all
all: directories parsers $(TARGETS)
	@echo "Success!"

parsers:
	cd src/main/parse; make

# These are our targets (executables)
# In order to create and link our objects to system libraries
# we need the get and put objects
get: $(GETOBJECTS)
	@printf "linking %s..." $^
	@$(LINKER) $@ $(LFLAGS) $(GETOBJECTS) $(PARSEDIR)checkSyntax.tab.o $(PARSEDIR)lex.csy.o $(PARSEDIR)checkAccess.tab.o $(PARSEDIR)lex.cac.o
	@echo "Done!"

put: $(PUTOBJECTS)
	@printf "linking %s..." $^
	@$(LINKER) $@ $(LFLAGS) $(PUTOBJECTS) $(PARSEDIR)checkSyntax.tab.o $(PARSEDIR)lex.csy.o $(PARSEDIR)checkAccess.tab.o $(PARSEDIR)lex.cac.o
	@echo "Done!"

# This is the first stage in compilation, creating the objects
$(GETOBJECTS): $(OBJDIR)/get/%.o : $(SRCDIR)/get/%.c
	@printf "compiling %s..." $<
	@$(CC) $(CFLAGS) -c $< -o $@
	@echo "Done!"

$(PUTOBJECTS): $(OBJDIR)/put/%.o : $(SRCDIR)/put/%.c
	@printf "compiling %s..." $<
	@$(CC) $(CFLAGS) -c $< -o $@
	@echo "Done!"

# Create directories if they don't exist
.PHONY: directories
directories: $(OUT_DIRS)

$(OUT_DIRS):
	@echo "created " $@
	@$(MKDIR_P) $@

# The clean target will remove objects, leaving executables
.PHONY: clean
clean:
	@$(rm) $(GETOBJECTS)
	@$(rm) $(PUTOBJECTS)
	@echo "Objects removed!"

# The remove target will remove everything generated by this makefile
.PHONY: remove
remove: clean
	@$(rm) $(TARGETS)
	@$(rm) $(OUT_DIR_ROOTS)
	@echo "Executables removed!"
